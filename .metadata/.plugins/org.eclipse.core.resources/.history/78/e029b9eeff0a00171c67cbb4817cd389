package by.htp.library;

public class Deletemax {
	public static void main (String[] args){
		//создаем матрицу используя двумерный массив
		int x = 4; /*(int)(Math.random()*5+1);*/
		int y = 4; /*(int)(Math.random()*5+1);*/
		int [][] arr = new int [x][y];
		//заполняем массив
		for (int i = 0; i < x; i++) {
	            for (int j = 0; j < y; j++) {
			arr[i][j] = (int)(Math.random()*10);
	            }
	        }
	    //выводим исходный массив
		for (int i = 0; i < x; i++) {
	            for (int j = 0; j < y; j++) {
	                System.out.print(arr[i][j]);
	            }
	            System.out.println();
	        }
		
		int max = -1;
		//ищем максимальные элементы
		for (int i = 0; i < x; i++) {
	            for (int j = 0; j < y; j++) {
			if (max<arr[i][j]){
			max = arr[i][j];
	                }
	            }
	            
	        }
		System.out.println("Max:"+max);
		//ищем колчиество максимальных элементов
		int quant = 0;
		for (int i = 0; i < x; i++) {
	            for (int j = 0; j < y; j++) {
			if (max==arr[i][j]){
			quant = quant+1;
	                }
	            }
	            
	        }
	     System.out.println("quantity of max elements:"+quant);
	     if (x == 1&&y == 1) {
	     	System.out.println("There was only one array cell, so it has just disappeared.");
			System.exit(0);
	     }

	     //создаем массив, содержащий номера позиций максимальных элементов
	     int [] arr2 = new int [quant*2];
	     int q = 0; //variable used for filling in coordinates of max elements
	     //print array with positions coordinates
		for (int i = 0; i < x; i++) {
	            for (int j = 0; j < y; j++) {
			if (max==arr[i][j]){
			arr2[q] = i;
			arr2[q+1] = j;
			q = q+2;
	                }
	            }
	            
	        }
		
		 int dc = 1;//number of columns to be deleted
		 int dr = 1;//number of rows to be deleted
	     for (int i = 0;i<arr2.length;i++){
	     	System.out.print(arr2[i]);
	     }
	     System.out.println();
	     if (quant>1){
	     
	     dc = 1; 
	     for (int i = 1;i<arr2.length-1;i=i+2){
	     	if (arr2[i]!=arr2[i+2]){
	     		dc = dc+1;
	     	}
	     }
	     if (dc==y){
	     	System.out.println("All the columns have disappeared.");
	     	System.exit(0);
	     }
		
		dr = 1; 
	     for (int i = 0;i<arr2.length-1;i=i+2){     	
	     	if (arr2[i]!=arr2[+2]){
	     		dr = dr+1;
	     	}
	     }
	     if (dr==x){
	     	System.out.println("All the rows have disappeared.");
	     	System.exit(0);
	     }

		}
	    /*
	    // sorting x positions in arr2
		int m = 0;
		for (int i =0;i<arr2.length-1;i=i+2) {
			for (int j = 0;j<arr2.length-1;j=j+2) {
				if (arr2[m]>arr2[i]) {
					m = j;
				}
				int t;
				t = arr2[m];
				arr2[m]=arr2[i];
				arr2[i]=t;
			}
		}
		// sorting y positions in arr2
		int n = 0;
		for (int i =1;i<arr2.length;i=i+2) {
			for (int j = 1;j<arr2.length;j=j+2) {
				if (arr2[n]>arr2[i]) {
					n = j;
				}
				int t;
				t = arr2[n];
				arr2[n]=arr2[i];
				arr2[i]=t;
			}
		}
		
		for (int i=0;i<arr2.length;i++) {
			System.out.print(arr2[i]);
			
		}
		*/
		System.out.println("dc:"+dc);
		System.out.println("dr:"+dr);
		//creating final array
		int finx = x-dc; //number of rows in final array
		int finy = y-dr; //number of columns in final array
		int [][] finarr = new int [finx][finy];
		
		boolean yesx = false;
		boolean yesy = false;
		int e = 0;
		int r = 0;
		for (int i = 0;i<x;i++){
			for (int q1 = 0;q1<arr2.length-1;q1+=2){
				if (i == arr2[q1]){
					yesx = true;
				}
			}
			if (yesx){
				continue;
			}
			for (int j = 0;j<y;j++) {
				for (int q2 = 1;q2<arr2.length-1;q2+=2){
					yesy = true;
				}
				if (yesy){
					continue;
				}
				finarr [e][r] = arr[i][j];
				r++;
			}
			e++;
		}

		for (int i = 0; i < finx; i++) {
	            for (int j = 0; j < finy; j++) {
	                System.out.print(finarr[i][j]);
	            }
	            System.out.println();
	        }


	}

}
